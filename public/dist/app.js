angular.module("userApp",["ngAnimate","app.routes","authService","userService","lunchService","eventService","mainCtrl","userCtrl","lunchCtrl","eventCtrl"]).config(["$httpProvider",function(e){e.interceptors.push("AuthInterceptor")}]),angular.module("app.routes",["ngRoute"]).config(["$routeProvider","$locationProvider",function(e,t){e.when("/",{templateUrl:"app/views/pages/home.html"}).when("/login",{templateUrl:"app/views/pages/login.html",controller:"mainController",controllerAs:"login"}).when("/users",{templateUrl:"app/views/pages/users/all.html",controller:"userController",controllerAs:"user"}).when("/users/create",{templateUrl:"app/views/pages/users/single.html",controller:"userCreateController",controllerAs:"user"}).when("/users/:user_id",{templateUrl:"app/views/pages/users/single.html",controller:"userEditController",controllerAs:"user"}).when("/lunches",{templateUrl:"app/views/pages/lunches/all.html",controller:"lunchController",controllerAs:"lunch"}).when("/lunches/create",{templateUrl:"app/views/pages/lunches/single.html",controller:"lunchCreateController",controllerAs:"lunch"}).when("/lunches/:lunch_id",{templateUrl:"app/views/pages/lunches/single.html",controller:"lunchEditController",controllerAs:"lunch"}).when("/events",{templateUrl:"app/views/pages/events/all.html",controller:"eventController",controllerAs:"event"}).when("/events/create",{templateUrl:"app/views/pages/events/single.html",controller:"eventCreateController",controllerAs:"event"}).when("/events/:event_id",{templateUrl:"app/views/pages/events/single.html",controller:"eventEditController",controllerAs:"event"}),t.html5Mode(!0)}]),angular.module("eventCtrl",["eventService"]).controller("eventController",["Event",function(e){var t=this;t.processing=!0,e.all().success(function(e){t.processing=!1,t.events=e}),t.deleteEvent=function(n){t.processing=!0,e["delete"](n).success(function(n){e.all().success(function(e){t.processing=!1,t.events=e})})}}]).controller("eventCreateController",["Event",function(e){var t=this;t.type="create",t.saveEvent=function(){t.processing=!0,t.message="",e.create(t.eventData).success(function(e){t.processing=!1,t.eventData={},t.message=e.message})}}]).controller("eventEditController",["$routeParams","Event",function(e,t){var n=this;n.type="edit",t.get(e.event_id).success(function(e){n.eventData=e}),n.saveEvent=function(){n.processing=!0,n.message="",t.update(e.event_id,n.eventData).success(function(e){n.processing=!1,n.eventData={},n.message=e.message})}}]),angular.module("lunchCtrl",["lunchService"]).controller("lunchController",["Lunch",function(e){var t=this;t.processing=!0,e.all().success(function(e){t.processing=!1,t.lunches=e}),t.deleteLunch=function(n){t.processing=!0,e["delete"](n).success(function(n){e.all().success(function(e){t.processing=!1,t.lunches=e})})}}]).controller("lunchCreateController",["Lunch",function(e){var t=this;t.type="create",t.saveLunch=function(){t.processing=!0,t.message="",e.create(t.lunchData).success(function(e){t.processing=!1,t.lunchData={},t.message=e.message})}}]).controller("lunchEditController",["$routeParams","Lunch",function(e,t){var n=this;n.type="edit",t.get(e.lunch_id).success(function(e){n.lunchData=e}),n.saveLunch=function(){n.processing=!0,n.message="",t.update(e.lunch_id,n.lunchData).success(function(e){n.processing=!1,n.lunchData={},n.message=e.message})}}]),angular.module("mainCtrl",[]).controller("mainController",["$rootScope","$location","Auth",function(e,t,n){var r=this;r.loggedIn=n.isLoggedIn(),e.$on("$routeChangeStart",function(){r.loggedIn=n.isLoggedIn(),n.getUser().then(function(e){r.user=e.data})}),r.doLogin=function(){r.processing=!0,r.error="",n.login(r.loginData.username,r.loginData.password).success(function(e){r.processing=!1,e.success?t.path("/users"):r.error=e.message})},r.doLogout=function(){n.logout(),r.user="",t.path("/login")}}]),angular.module("userCtrl",["userService"]).controller("userController",["User",function(e){var t=this;t.processing=!0,e.all().success(function(e){t.processing=!1,t.users=e}),t.deleteUser=function(n){t.processing=!0,e["delete"](n).success(function(n){e.all().success(function(e){t.processing=!1,t.users=e})})}}]).controller("userCreateController",["User",function(e){var t=this;t.type="create",t.saveUser=function(){t.processing=!0,t.message="",e.create(t.userData).success(function(e){t.processing=!1,t.userData={},t.message=e.message})}}]).controller("userEditController",["$routeParams","User",function(e,t){var n=this;n.type="edit",t.get(e.user_id).success(function(e){n.userData=e}),n.saveUser=function(){n.processing=!0,n.message="",t.update(e.user_id,n.userData).success(function(e){n.processing=!1,n.userData={},n.message=e.message})}}]),angular.module("authService",[]).factory("Auth",["$http","$q","AuthToken",function(e,t,n){var r={};return r.login=function(t,r){return e.post("/api/authenticate",{username:t,password:r}).success(function(e){return n.setToken(e.token),e})},r.logout=function(){n.setToken()},r.isLoggedIn=function(){return n.getToken()?!0:!1},r.getUser=function(){return n.getToken()?e.get("/api/me",{cache:!0}):t.reject({message:"User has no token."})},r}]).factory("AuthToken",["$window",function(e){var t={};return t.getToken=function(){return e.localStorage.getItem("token")},t.setToken=function(t){t?e.localStorage.setItem("token",t):e.localStorage.removeItem("token")},t}]).factory("AuthInterceptor",["$q","$location","AuthToken",function(e,t,n){var r={};return r.request=function(e){var t=n.getToken();return t&&(e.headers["x-access-token"]=t),e},r.responseError=function(r){return 403==r.status&&(n.setToken(),t.path("/login")),e.reject(r)},r}]),angular.module("eventService",[]).factory("Event",["$http",function(e){var t={};return t.get=function(t){return e.get("/api/events/"+t)},t.all=function(){return e.get("/api/events/")},t.create=function(t){return e.post("/api/events/",t)},t.update=function(t,n){return e.put("/api/events/"+t,n)},t["delete"]=function(t){return e["delete"]("/api/events/"+t)},t}]),angular.module("lunchService",[]).factory("Lunch",["$http",function(e){var t={};return t.get=function(t){return e.get("/api/lunches/"+t)},t.all=function(){return e.get("/api/lunches/")},t.create=function(t){return e.post("/api/lunches/",t)},t.update=function(t,n){return e.put("/api/lunches/"+t,n)},t["delete"]=function(t){return e["delete"]("/api/lunches/"+t)},t}]),angular.module("userService",[]).factory("User",["$http",function(e){var t={};return t.get=function(t){return e.get("/api/users/"+t)},t.all=function(){return e.get("/api/users/")},t.create=function(t){return e.post("/api/users/",t)},t.update=function(t,n){return e.put("/api/users/"+t,n)},t["delete"]=function(t){return e["delete"]("/api/users/"+t)},t}]);